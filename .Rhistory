#to run simulations and get stats
ms.file<- MS(file, niter=30, thetaID="user", params=parDefined,neutrality=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-5
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
# ----seeds----specify 3 random number seeds. a vector of length 3 with positive integer values is expected
parDefined@seeds<-c(1,2,3)
#to run simulations and get stats
ms.file<- MS(file, niter=30, thetaID="user", params=parDefined,neutrality=TRUE)
ms.file<- MS(file, niter=30, thetaID="user", params=parDefined,F_ST=TRUE)
ms.file<- MS(file, niter=100, thetaID="user", params=parDefined,neutrality=TRUE)
file<-readData("FastaSeqs",include.unknown=T)
file<-neutrality.stats(file)
# or the F_ST stats if we want haplotype diversity
file<-F_ST.stats(file)
ms.file <- MS(file, niter=20,thetaID="Tajima", neutrality=TRUE)
ms.file
ms.file <- MS(file, niter=20,thetaID="Tajima", F_ST=TRUE)
r
parDefined@growth<-10
# ----seeds----specify 3 random number seeds. a vector of length 3 with positive integer values is expected
parDefined@seeds<-c(1,2,3)
ms.file<- MS(file, niter=10, thetaID="Tajima", params=parDefined,neutrality=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-5
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
ms.file<- MS(file, niter=30, thetaID="user", params=parDefined,F_ST=TRUE)
MS_getStats(ms.file)->sumFile1
MS_getStats(ms.file)->sumFile2
View(sumFile1)
sumFile2
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-1
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
parDefined@theta<-1.1
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
# ----seeds----specify 3 random number seeds. a vector of length 3 with positive integer values is expected
ms.file<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
parDefined@theta<-2
parDefined@growth<-10
ms.file<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
ms.file<- MS(file, niter=30, thetaID="user", params=parDefined,F_ST=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-3
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
ms.file<- MS(file, niter=30, thetaID="user", params=parDefined,F_ST=TRUE)
ms.file<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-4
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
ms.file<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-5
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
ms.file<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
MS_getStats(ms.file)->sumFile1
MS_getStats(ms.file)->sumFile2
sumFile1
sumFile2
ms.file1<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
ms.file2<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
MS_getStats(ms.file1)->sumFile1
MS_getStats(ms.file2)->sumFile2
sumFile1
View(sumFile2)
help(set.seed)
set.seed(123)
ms.file1<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
set.seed(123)
ms.file2<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
MS_getStats(ms.file1)->sumFile1
MS_getStats(ms.file2)->sumFile2
sumFile1
View(sumFile2)
ms.file1<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
MS_getStats(ms.file1)->sumFile1
View(sumFile1)
set.seed(123)
ms.file1<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
MS_getStats(ms.file1)->sumFile1
View(sumFile1)
file<-readData("FastaSeqs",include.unknown=T)
get.sum.data(file)
# first we need to apply the neutrality stats
file<-neutrality.stats(file)
# or the F_ST stats if we want haplotype diversity
file<-F_ST.stats(file)
ms.file <- MS(file, niter=20,thetaID="Tajima", neutrality=TRUE)
MS_getStats(ms.file) #stats change depending what module we choose
ms.file <- MS(file, niter=20,thetaID="Tajima", F_ST=TRUE)
MS_getStats(ms.file) #stats change depending what module we choose
parDefined@theta<-5
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
# ----seeds----specify 3 random number seeds. a vector of length 3 with positive integer values is expected.IS NOT WORKING, ERROR MESSAGE
parDefined@seeds<-c(1,2,3)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-5
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
# ----seeds----specify 3 random number seeds. a vector of length 3 with positive integer values is expected.IS NOT WORKING, ERROR MESSAGE
parDefined@seeds<-c(1,2,3)
set.seed(123)
ms.file1<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
ms.file1<- MS(file,nsamp=14 niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
ms.file1<- MS(file,nsamp=14, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-1
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file1<- MS(file,niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
MS_getStats(ms.file1)->sumFile1
ms.file2<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
set.seed(123)
ms.file2<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-4
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file2<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-1
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file2<- MS(file, niter=1000, thetaID="user", params=parDefined,F_ST=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-2
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file2<- MS(file, niter=1000, thetaID="user", params=parDefined,F_ST=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-3
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file2<- MS(file, niter=1000, thetaID="user", params=parDefined,F_ST=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-4
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file2<- MS(file, niter=1000, thetaID="user", params=parDefined,F_ST=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-5
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file2<- MS(file, niter=1000, thetaID="user", params=parDefined,F_ST=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-5
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
1
ms.file2<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-1
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
parDefined@fixedSegsites<-1
parDefined@fixedsegsites<-1
parDefined
parDefined@fixed.seg.sites<-1
ms.file1<- MS(file,niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
set.seed(123)
ms.file1<- MS(file,niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
set.seed(123)
ms.file2<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
MS_getStats(ms.file1)->sumFile1
MS_getStats(ms.file2)->sumFile2
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-5
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
set.seed(123)
ms.file1<- MS(file,niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
set.seed(123)
ms.file2<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
MS_getStats(ms.file1)->sumFile1
MS_getStats(ms.file2)->sumFile2
sumFile1
View(sumFile2)
library(phyclust)
# trying to think because is still making similar sequences!
set.seed(123)
tree<-ms(nsam=20, nreps=1, opts= "-T -t 1")
We simulated sequences data for 200 individuals using the combined approach ms [@Hudson2002] plus seq-gen [@Rambaut1997] implemented in the *phyclust* package [@Chen2011] of the R program [@RCoreTeam2013]. The ms() function is used to simulate trees in a population that evolves under a Wrigth-Fisher model, and the seqgen() function is used to generate the nucleotide sequences according to those/the tree/s. We simulated sequences for different levels of mutation rate ($\theta$) and saved the  sequences in fasta files representing our "original" populations.
simtree1<-read.tree(text=tree[3])
# changing -s, according to the ms manual, changes theta
set.seed(123)
seqs1<-seqgen(opts= "-mHKY -l600 -q -s0.1", rooted.tree=simtree)
seqs.easy1<-read.seqgen(seqs1)
write.fasta(seqs.easy1$org,"test_s01.fas")
set.seed(123)
seqs2<-seqgen(opts= "-mHKY -l600 -q -s0.2", rooted.tree=simtree)
seqs.easy2<-read.seqgen(seqs2)
write.fasta(seqs.easy2$org,"test_s02.fas")
set.seed(123)
seqs3<-seqgen(opts= "-mHKY -l600 -q -s0.3", rooted.tree=simtree)
seqs.easy3<-read.seqgen(seqs3)
write.fasta(seqs.easy3$org,"test_s03.fas")
simtree<-read.tree(text=tree[3])
set.seed(123)
seqs1<-seqgen(opts= "-mHKY -l600 -q -s0.1", rooted.tree=simtree)
seqs.easy1<-read.seqgen(seqs1)
write.fasta(seqs.easy1$org,"test_s01.fas")
set.seed(123)
seqs2<-seqgen(opts= "-mHKY -l600 -q -s0.2", rooted.tree=simtree)
seqs.easy2<-read.seqgen(seqs2)
write.fasta(seqs.easy2$org,"test_s02.fas")
set.seed(123)
seqs3<-seqgen(opts= "-mHKY -l600 -q -s0.3", rooted.tree=simtree)
seqs.easy3<-read.seqgen(seqs3)
write.fasta(seqs.easy3$org,"test_s03.fas")
ourpath<-getwd()
gitpath<-paste(ourpath,"/SimSeqs",sep="")
# converting FASTA file to GENOME object
simSeq<-readData(gitpath,include.unknown=T)
simSeq@n.sites # gives the number of sites in the alignment
get.sum.data(simSeq) # gives the summary information of the alignment, with the @ you can get all of those summaries, for example:
set.seed(123)
seqs1<-seqgen(opts= "-mHKY -l600 -q -s0.01", rooted.tree=simtree)
seqs.easy1<-read.seqgen(seqs1)
write.fasta(seqs.easy1$org,"test_s001.fas")
set.seed(123)
seqs2<-seqgen(opts= "-mHKY -l600 -q -s0.02", rooted.tree=simtree)
seqs.easy2<-read.seqgen(seqs2)
write.fasta(seqs.easy2$org,"test_s002.fas")
set.seed(123)
seqs3<-seqgen(opts= "-mHKY -l600 -q -s0.03", rooted.tree=simtree)
seqs.easy3<-read.seqgen(seqs3)
write.fasta(seqs.easy3$org,"test_s003.fas")
ourpath<-getwd()
gitpath<-paste(ourpath,"/SimSeqs",sep="")
# converting FASTA file to GENOME object
simSeq<-readData(gitpath,include.unknown=T)
simSeq@n.sites # gives the number of sites in the alignment
get.sum.data(simSeq) # gives the summa
diversity.stats(simSeq,pi=TRUE)->divResults
Piout<-divResults@Pi
Piout
Totsites<-divResults@n.sites
Piout2<-Piout/Totsites #Pi per nucleotide
# Haplotype diversity (H)
divResults@hap.diversity.within
set.seed(123)
seqs1<-seqgen(opts= "-mHKY -l600 -q -s0.001", rooted.tree=simtree)
seqs.easy1<-read.seqgen(seqs1)
write.fasta(seqs.easy1$org,"test_s0001.fas")
set.seed(123)
seqs2<-seqgen(opts= "-mHKY -l600 -q -s0.002", rooted.tree=simtree)
seqs.easy2<-read.seqgen(seqs2)
write.fasta(seqs.easy2$org,"test_s0002.fas")
set.seed(123)
seqs3<-seqgen(opts= "-mHKY -l600 -q -s0.003", rooted.tree=simtree)
seqs.easy3<-read.seqgen(seqs3)
write.fasta(seqs.easy3$org,"test_s0003.fas")
ourpath<-getwd()
gitpath<-paste(ourpath,"/SimSeqs",sep="")
# converting FASTA file to GENOME object
simSeq<-readData(gitpath,include.unknown=T)
simSeq@n.sites # gives the number of sites in the alignment
get.sum.data(simSeq) # gives the summary information of the alignment, with the @ you can get all of those summaries, for example:
Varsites<-simSeq@n.biallelic.sites #number of biallelic sites (SNPs)
Varsites
# aplying the "diversity.stats" methods
diversity.stats(simSeq,pi=TRUE)->divResults
Piout<-divResults@Pi
Piout
# changing -s, according to the ms manual, changes theta
set.seed(123)
seqs1<-seqgen(opts= "-mHKY -l600 -q -s0.004", rooted.tree=simtree)
seqs.easy1<-read.seqgen(seqs1)
write.fasta(seqs.easy1$org,"test_s0004.fas")
set.seed(123)
seqs2<-seqgen(opts= "-mHKY -l600 -q -s0.005", rooted.tree=simtree)
seqs.easy2<-read.seqgen(seqs2)
write.fasta(seqs.easy2$org,"test_s0005.fas")
set.seed(123)
seqs3<-seqgen(opts= "-mHKY -l600 -q -s0.006", rooted.tree=simtree)
seqs.easy3<-read.seqgen(seqs3)
write.fasta(seqs.easy3$org,"test_s0006.fas")
ourpath<-getwd()
gitpath<-paste(ourpath,"/SimSeqs",sep="")
# converting FASTA file to GENOME object
simSeq<-readData(gitpath,include.unknown=T)
simSeq@n.sites # gives the number of sites in the alignment
get.sum.data(simSeq) # gives the summary information of the alignment, with the @ you can get all of those summaries, for example:
Varsites<-simSeq@n.biallelic.sites #number of biallelic sites (SNPs)
Varsites
# aplying the "diversity.stats" methods
diversity.stats(simSeq,pi=TRUE)->divResults
Piout<-divResults@Pi
Piout
Totsites<-divResults@n.sites
Piout2<-Piout/Totsites #Pi per nucleotide
# Haplotype diversity (H)
divResults@hap.diversity.within
set.seed(123)
seqs2<-seqgen(opts= "-mHKY -l600 -q -s0.0035", rooted.tree=simtree)
seqs.easy2<-read.seqgen(seqs2)
write.fasta(seqs.easy2$org,"test_s00035.fas")
ourpath<-getwd()
gitpath<-paste(ourpath,"/SimSeqs",sep="")
# converting FASTA file to GENOME object
simSeq<-readData(gitpath,include.unknown=T)
simSeq@n.sites # gives the number of sites in the alignment
get.sum.data(simSeq) # gives the summary information of the alignment, with the @ you can get all of those summaries, for example:
Varsites<-simSeq@n.biallelic.sites #number of biallelic sites (SNPs)
Varsites
# aplying the "diversity.stats" methods
diversity.stats(simSeq,pi=TRUE)->divResults
Piout<-divResults@Pi
Piout
neuResults<-neutrality.stats(simSeq)
neu<-get.neutrality(neuResults,theta=T,stats=T)
Tajout<-neuResults@Tajima.D
Tajout
set.seed(123)
tree<-ms(nsam=20, nreps=1, opts= "-T -t 1 -G 10")
simtree<-read.tree(text=tree[3])
set.seed(123)
seqs1<-seqgen(opts= "-mHKY -l600 -q -s0.004", rooted.tree=simtree)
seqs.easy1<-read.seqgen(seqs1)
write.fasta(seqs.easy1$org,"test_s0004.fas")
set.seed(123)
seqs2<-seqgen(opts= "-mHKY -l600 -q -s0.0035", rooted.tree=simtree)
seqs.easy2<-read.seqgen(seqs2)
write.fasta(seqs.easy2$org,"test_s00035.fas")
set.seed(123)
seqs3<-seqgen(opts= "-mHKY -l600 -q -s0.003", rooted.tree=simtree)
seqs.easy3<-read.seqgen(seqs3)
write.fasta(seqs.easy3$org,"test_s0003.fas")
ourpath<-getwd()
gitpath<-paste(ourpath,"/SimSeqs",sep="")
# converting FASTA file to GENOME object
simSeq<-readData(gitpath,include.unknown=T)
simSeq@n.sites # gives the number of sites in the alignment
get.sum.data(simSeq) # gives the summary information of the alignment, with the @ you can get all of those summaries, for example:
Varsites<-simSeq@n.biallelic.sites #number of biallelic sites (SNPs)
Varsites
# aplying the "diversity.stats" methods
diversity.stats(simSeq,pi=TRUE)->divResults
Piout<-divResults@Pi
Piout
Totsites<-divResults@n.sites
Piout2<-Piout/Totsites #Pi per nucleotide
# Haplotype diversity (H)
divResults@hap.diversity.within
# aplying the "neutrality.stats"
neuResults<-neutrality.stats(simSeq)
neu<-get.neutrality(neuResults,theta=T,stats=T)
Tajout<-neuResults@Tajima.D
Tajout
help(readMs)
help(readMS)
output<-ms(nsam=20, nreps=1, opts= "-t 1 -G 10")
class(output)
readMS(ms)
output
output<-ms(nsam=20, nreps=1, opts= "-t 1 -G 10 | tail +4 | grep -v // >outfile")
readMS
class(output)
write.table(output,"output")
write.tst(output,"output")
write.txt(output,"output")
help(write.table)
str(output)
file@n.haplotypes
file<-readData("FastaSeqs",include.unknown=T)
get.sum.data(file)
# first we need to apply the neutrality stats
file<-neutrality.stats(file)
# or the F_ST stats if we want haplotype diversity
file<-F_ST.stats(file)
# we call Hudson program, thetaID needs to be defined for any module
ms.file <- MS(file, niter=20,thetaID="Tajima", neutrality=TRUE)
ms.file@n.haplotypes
s
MS_getStats(ms.file) #stats change depending what module we choose
class(MS_getStats(ms.file))
file<-readData("FastaSeqs",include.unknown=T)
file@n.haplotypes
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-5
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
set.seed(123)
ms.file1<- MS(file,niter=5, thetaID="user", params=parDefined,neutrality=TRUE)
set.seed(123)
file<-neutrality.stats(file)
ms.file1<- MS(file,niter=5, thetaID="user", params=parDefined,neutrality=TRUE)
MS_getStats(ms.file1)->sumFile1
sumFile1
a=NULL
for (i in 1:5){
(5/(5+i-1))->a[i+0]
}
a
sum(a)
theta= 1.494709
a=NULL
for (i in 1:5){
(theta/(theta+i-1))->a[i+0]
}
a
sum(a)
theta= 1.798812
a=NULL
for (i in 1:5){
(theta/(theta+i-1))->a[i+0]
}
sum(a)
ms.file2<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
file<-readData("FastaSeqs",include.unknown=T)
get.sum.data(file)
# first we need to apply the neutrality stats
file<-neutrality.stats(file)
# or the F_ST stats if we want haplotype diversity
file<-F_ST.stats(file)
ms.file2<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
MS_getStats(ms.file2)->sumFile2
View(sumFile2)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-5
set.seed(123)
ms.file1<- MS(file,niter=5, thetaID="user", params=parDefined,neutrality=TRUE)
MS_getStats(ms.file1)->sumFile1
sumFile1
ms.file1<- MS(file,niter=30, thetaID="user", params=parDefined,neutrality=TRUE)
MS_getStats(ms.file1)->sumFile1
sumFile1
mean(sumFile1[,"theta_Tajima"])
mean(sumFile1[,"theta_Watterson"])
variance(sumFile1[,"theta_Tajima"])
var(sumFile1[,"theta_Tajima"])
var(sumFile1[,"theta_Watterson"])
sumFile1
mean(sumFile1[,"theta_Tajima"])
var(sumFile1[,"theta_Tajima"])
mean(sumFile1[,"theta_Watterson"])
var(sumFile1[,"theta_Watterson"])
ms.file2<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
MS_getStats(ms.file1)->sumFile1
MS_getStats(ms.file2)->sumFile2
sumFile2
