<<<<<<< HEAD
#to run simulations and get stats
ms.file<- MS(file, niter=30, thetaID="user", params=parDefined,neutrality=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-5
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
# ----seeds----specify 3 random number seeds. a vector of length 3 with positive integer values is expected
parDefined@seeds<-c(1,2,3)
#to run simulations and get stats
ms.file<- MS(file, niter=30, thetaID="user", params=parDefined,neutrality=TRUE)
ms.file<- MS(file, niter=30, thetaID="user", params=parDefined,F_ST=TRUE)
ms.file<- MS(file, niter=100, thetaID="user", params=parDefined,neutrality=TRUE)
file<-readData("FastaSeqs",include.unknown=T)
file<-neutrality.stats(file)
# or the F_ST stats if we want haplotype diversity
file<-F_ST.stats(file)
ms.file <- MS(file, niter=20,thetaID="Tajima", neutrality=TRUE)
ms.file
ms.file <- MS(file, niter=20,thetaID="Tajima", F_ST=TRUE)
r
parDefined@growth<-10
# ----seeds----specify 3 random number seeds. a vector of length 3 with positive integer values is expected
parDefined@seeds<-c(1,2,3)
ms.file<- MS(file, niter=10, thetaID="Tajima", params=parDefined,neutrality=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-5
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
ms.file<- MS(file, niter=30, thetaID="user", params=parDefined,F_ST=TRUE)
MS_getStats(ms.file)->sumFile1
MS_getStats(ms.file)->sumFile2
View(sumFile1)
sumFile2
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-1
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
parDefined@theta<-1.1
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
# ----seeds----specify 3 random number seeds. a vector of length 3 with positive integer values is expected
ms.file<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
parDefined@theta<-2
parDefined@growth<-10
ms.file<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
ms.file<- MS(file, niter=30, thetaID="user", params=parDefined,F_ST=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-3
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
ms.file<- MS(file, niter=30, thetaID="user", params=parDefined,F_ST=TRUE)
ms.file<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-4
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
ms.file<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-5
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
ms.file<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
MS_getStats(ms.file)->sumFile1
MS_getStats(ms.file)->sumFile2
sumFile1
sumFile2
ms.file1<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
ms.file2<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
MS_getStats(ms.file1)->sumFile1
MS_getStats(ms.file2)->sumFile2
sumFile1
View(sumFile2)
help(set.seed)
=======
<<<<<<< Updated upstream
result<-NULL
for (i in 1:length(x)) {
AphiaRecord <- iface@functions$getAphiaRecordByID(x[i],('http://www.marinespecies.org/aphia.php?p=soap'))
result<-c(result, slot(AphiaRecord, "valid_AphiaID"))
}
return(result)
}
MySpecList$AccTaxID<-SynResolv(MySpecList$OrigTaxID)
MySpecList
#---------------------------------------------------------------------
# Add full record information (classification, ranking, authority,...)
#---------------------------------------------------------------------
getFullRecord <- function(x) {
result<-NULL
for (i in 1:length(x)) {
AphiaRecord <- iface@functions$getAphiaRecordByID(x[i],('http://www.marinespecies.org/aphia.php?p=soap'))
slotnames <- slotNames(AphiaRecord)
slotlist <- data.frame(rbind(1:length(slotnames)))
names(slotlist) <- slotnames
for(y in slotnames) {
#R cannot handle a slot name "class"
if (y == "CLASS") {slotlist[1,y] <- '(empty)'}
else {slotlist[1, y] <- slot(AphiaRecord,  y)}
}
result<-rbind(result, slotlist)
}
return(result)
}
AphiaRecords<-getFullRecord(MySpecList$AccTaxID)
MySpecList<-cbind(MySpecList, AphiaRecords)
MySpecList
-------------------------------------------
source('C:/Users/Paula/Dropbox/toPaula/BodySize RangeSize/script_to use WORMS in R.R')
# Install and load library, process WSDL and prepare R SOAP functions
#-------------------------------------------
#install.packages("SSOAP", repos = "http://www.omegahat.org/R", dependencies = TRUE)
library(SSOAP)
w = processWSDL("http://www.marinespecies.org/aphia.php?p=soap&wsdl=1")
iface = genSOAPClientInterface(, w)
#-------------------------------------------
# Look up AphiaID
#-------------------------------------------
AphiaID = iface@functions$getAphiaID("Solea solea",1,('http://www.marinespecies.org/aphia.php?p=soap'))
print(AphiaID) #should output '[0] 127160'
#-------------------------------------------
# Create your specieslist
#-------------------------------------------
MySpecies<-c("solea solea", "lanice conchilega", "abra alba", "Polydora audax")
MySpecies<-data.frame(MySpecies)
MySpecList<-data.frame(unique(MySpecies))
#-------------------------------------------
# Get original AphiaID's for specieslist
#-------------------------------------------
AphiaMatch <- function(x) {
result<-NULL
for (i in 1:length(x)) {
AphiaRecord <- iface@functions$getAphiaID(x[i],1,('http://www.marinespecies.org/aphia.php?p=soap'))
result<-c(result, AphiaRecord)
}
return(result)
}
MySpecList$OrigTaxID<-AphiaMatch(MySpecList$MySpecies)
MySpecList
#-------------------------------------------
# Get accepted synonym AphiaID's for specieslist
#-------------------------------------------
SynResolv <- function(x) {
result<-NULL
for (i in 1:length(x)) {
AphiaRecord <- iface@functions$getAphiaRecordByID(x[i],('http://www.marinespecies.org/aphia.php?p=soap'))
result<-c(result, slot(AphiaRecord, "valid_AphiaID"))
}
return(result)
}
MySpecList$AccTaxID<-SynResolv(MySpecList$OrigTaxID)
MySpecList
#---------------------------------------------------------------------
# Add full record information (classification, ranking, authority,...)
#---------------------------------------------------------------------
getFullRecord <- function(x) {
result<-NULL
for (i in 1:length(x)) {
AphiaRecord <- iface@functions$getAphiaRecordByID(x[i],('http://www.marinespecies.org/aphia.php?p=soap'))
slotnames <- slotNames(AphiaRecord)
slotlist <- data.frame(rbind(1:length(slotnames)))
names(slotlist) <- slotnames
for(y in slotnames) {
#R cannot handle a slot name "class"
if (y == "CLASS") {slotlist[1,y] <- '(empty)'}
else {slotlist[1, y] <- slot(AphiaRecord,  y)}
}
result<-rbind(result, slotlist)
}
return(result)
}
AphiaRecords<-getFullRecord(MySpecList$AccTaxID)
MySpecList<-cbind(MySpecList, AphiaRecords)
MySpecList
str(MySpecList)
install.packages("seqinr", dependencies = TRUE)
l ibrary ( s e q i n r )
library(seqinr)
choosebanck('genbank')
choosebank('genbank')
biv<-c("modiolus modiolus","acmaea testudinaria","anomalocardia brasileana")
search<-tryCatch(query("bb", paste("sp=", biv[1],"et k=COI",sep="")))
help(getsequence)
help(getSequence)
source('C:/Users/Paula/Dropbox/toPaula/newR/find_species_range_Paula.r')
```{r}
summary(cars)
```
You can also embed plots, for example:
```{r fig.width=7, fig.height=6}
plot(cars)
```
install.packages("knitr")
install.packages("pandoc")
install.packages("e1071")
library(rmarkdown)
install.packages("rmarkdown")
devtools::install_github("rstudio/rmarkdown")
install.packages("rmarkdown")
install.packages("treebase")
library(devtools)
install_github("treebase", "ropensci")
library(devtools)
install_github("treebase", "ropensci")
library(devtools)
install_github("ape", "ropensci")
install.packages("taxize")
install_github("rfishbase", "ropensci")
install.packages("rfishbase")
install.packages("C:/Users/Paula/Desktop/rfishbase_0.2-2.tar.gz", repos = NULL, type = "source")
library(fishbase)
library(rfishbase)
install.packages("C:/Users/Paula/Desktop/taxize_0.3.0.tar.gz", repos = NULL, type = "source")
install.packages("rdryad")
install.packages("C:/Users/Paula/Desktop/rdryad_0.1.1.tar.gz", repos = NULL, type = "source")
install.packages("treebase")
install.packages("rfishbase")
install.packages("taxize")
download.packages("treebase", destdir="/Users/Paula", type="source") # replace destdir param with any path on your computer
install.packages("/Users/Paula/treebase_0.0-7.1.tar.gz", repos=NULL, type="source")
download.packages("treebase", destdir="C:/Users/Paula/Desktop/", type="source") # replace destdir param with any path on your computer
install.packages("C:/Users/Paula/Desktop/treebase_0.0-7.1.tar.gz", repos=NULL, type="source")
download.packages("treebase", destdir="C:/Users/Paula/Desktop", type="source") # replace destdir param with any path on your computer
install.packages("C:/Users/Paula/Desktop/treebase_0.0-7.1.tar.gz", repos=NULL, type="source")
download.packages("treebase", destdir="c:/Users/Paula/desktop", type="source") # replace destdir param with any path on your computer
install.packages("c:/Users/Paula/desktop/treebase_0.0-7.1.tar.gz", repos=NULL, type="source")
download.packages("treebase", destdir="c:/Users/Paula/desktop", type="source")
install.packages("c:/Users/Paula/desktop/treebase_0.0-7.1.tar.gz", repos=NULL, type="source")
download.packages("treebase", destdir="C:/Users/Paula/desktop", type="source")
install.packages("C:/Users/Paula/desktop/treebase_0.0-7.1.tar.gz", repos=NULL, type="source")
install.packages("c:/Users/Paula/desktop/treebase_0.0-7.1.tar.gz", repos=NULL, type="source")
install.packages("c:/Users/Paula/desktop/treebase_0.0-7.1.tar", repos=NULL, type="source")
install.packages("c:/Users/Paula/desktop/treebase_0.0-7.1.tar.gz", repos=NULL, type="source")
install.packages("C:/Users/Paula/Desktop/treebase_0.0-7.1.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Paula/Desktop/treebase_0.0-7.1.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Paula/Desktop/rdryad_0.1.1.tar.gz", repos = NULL, type = "source")
install.packages("survnnet")
ta<-cbind(c(1,2),c("Male","Female"),c("Blue","Pink"))
names(ta)<-c("A","B","C")
ta
colnames(ta)<-c("A","B","C")
ta
ta<-cbind(c(1,2),c("Male","Female"),c("Blue","Pink"))
colnames(ta)<-c("A","B","C")
kable(ta)
library(knitr)
kable(ta)
plot(1)
load("C:/Users/Paula/Dropbox/Picoroco MS/Picoroco_Paula.Rmd")
plot(1,2)
plot(1,2,main="prueba",xlab="para ver resolucion")
library(pegas)
> data(woodmouse)
> x <- woodmouse[sample(15, size = 110, replace = TRUE), ]
> h <- haplotype(x)
> net <- haploNet(h)
> plot(net, size=attr(net, "freq"), scale.ratio = 2, cex = 0.8)
data(woodmouse)
x <- woodmouse[sample(15, size = 110, replace = TRUE), ]
h <- haplotype(x)
net <- haploNet(h)
plot(net, size=attr(net, "freq"), scale.ratio = 2, cex = 0.8)
help(summary.loci)
require(adegenet)
data(nancycats)
x <- as.loci(nancycats)
s <- summary(x)
plot(s, layout=20, las=2)
View(nancycats)
vignette('reading files')
vignette('ReadingFiles')
help(plot.haploNet)
data(woodmouse)
x <- woodmouse[sample(15, size = 110, replace = TRUE), ]
h <- haplotype(x)
net <- haploNet(h)
plot(net, size=attr(net, "freq"), scale.ratio = 2, cex = 0.8)
data(woodmouse)
x <- woodmouse[sample(15, size = 110, replace = TRUE), ]
h <- haplotype(x)
net <- haploNet(h)
plot(net, size=attr(net, "freq"), scale.ratio = 2, cex = 0.8)
data(woodmouse)
x <- woodmouse[sample(15, size = 110, replace = TRUE), ]
h <- haplotype(x)
net <- haploNet(h)
plot(net, size=attr(net, "freq"), scale.ratio = 2, cex = 0.8)
plot(!)
plot(1)
library(ggmap)
geocode("Eastern and Midwestern Regions of Canada")
geocode("Eastern and Midwestern Canada")
geocode("Eastern Canada")
geocode("Lebanon, New Hampshire")
geocode("St. Johnsbury, Vermont")
geocode("Salem, New York")
geocode("The Marine Mammal Center")
geocode("yeale, africa")
geocode("yeale, ivory coast")
geocode("northern and central Japan")
geocode("Japan")
geocode("University of Kentucky")
geocode("Tsavo National Park")
geocode("Nairobi National Park")
geocode("solio ranch")
geocode("Fakahatchee Strand,florida")
geocode("Tussen-die-Riviere Game Farm, Orange Free State")
geocode("Tussen-die-Riviere Game Farm")
geocode("Orange Free State")
geocode("Maple, Ontario")
geocode("Maple district, Ontario")
geocode("Sapulot, Sabah")
geocode("Sapulot, Sabah, Malasya")
geocode("Sapulot, Sabah, Malaysia")
geocode("chaco, argentina")
geocode("Corvallis, Oregon")
geocode("Svanoy, western Norway")
geocode("Svanoy, Norway")
geocode("Bremerhaven, Germany")
geocode("Engerdal Municipality, Norway")
geocode("Birganj Forest District")
geocode("Darjeeling")
geocode("Karnataka")
geocode("Shikari Bas, Asia")
geocode("Parsa, Asia")
geocode("Parsa, Shikari Bas, Asia")
geocode("tenasserim, Asia")
geocode("tenasserim")
geocode("kalimatan")
geocode("japan")
geocode("Hluhluwe–iMfolozi Park")
geocode("Hluhluwe–iMfolozi")
geocode("Mtethomusha")
geocode("thomas baine")
geocode("Thomas Baines Nature Reserve")
sessionInfo()
sessionInfo()
setwd("~/GitHub/QuBar")
library(PopGenome)
# In PopGenome, we can read all our fasta files at the same time, from our defined folder
# I think I found a useful trick to name the path that will work for both of us
ourpath<-getwd()
gitpath<-paste(ourpath,"/SimSeqs",sep="")
simSeq<-readData(gitpath,include.unknown=T)
simSeq@n.sites # gives the number of sites in the alignment
get.sum.data(simSeq) # gives the summary information of the alignment, with the @ you can get all of those summaries, for example:
Varsites<-simSeq@n.biallelic.sites #number of biallelic sites (SNPs)
Varsites
neuResults<-neutrality.stats(simSeq,theta=T)
neu<-get.neutrality(simSeq,theta=T,stats=T)
neu<-get.neutrality(neuResults,theta=T,stats=T)
neuResults<-neutrality.stats(simSeq)
neu<-get.neutrality(neuResults,theta=T,stats=T)
neu
nTajout<-neuResults@Tajima.D
Tajout
Tajout<-neuResults@Tajima.D
Tajout
neuResults@n.segregating.sites
>>>>>>> origin/master
set.seed(123)
ms.file1<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
set.seed(123)
ms.file2<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
MS_getStats(ms.file1)->sumFile1
MS_getStats(ms.file2)->sumFile2
sumFile1
View(sumFile2)
ms.file1<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
MS_getStats(ms.file1)->sumFile1
View(sumFile1)
set.seed(123)
ms.file1<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
MS_getStats(ms.file1)->sumFile1
View(sumFile1)
file<-readData("FastaSeqs",include.unknown=T)
get.sum.data(file)
# first we need to apply the neutrality stats
file<-neutrality.stats(file)
# or the F_ST stats if we want haplotype diversity
file<-F_ST.stats(file)
ms.file <- MS(file, niter=20,thetaID="Tajima", neutrality=TRUE)
MS_getStats(ms.file) #stats change depending what module we choose
ms.file <- MS(file, niter=20,thetaID="Tajima", F_ST=TRUE)
MS_getStats(ms.file) #stats change depending what module we choose
parDefined@theta<-5
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
# ----seeds----specify 3 random number seeds. a vector of length 3 with positive integer values is expected.IS NOT WORKING, ERROR MESSAGE
parDefined@seeds<-c(1,2,3)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-5
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
# ----seeds----specify 3 random number seeds. a vector of length 3 with positive integer values is expected.IS NOT WORKING, ERROR MESSAGE
parDefined@seeds<-c(1,2,3)
set.seed(123)
ms.file1<- MS(file, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
ms.file1<- MS(file,nsamp=14 niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
ms.file1<- MS(file,nsamp=14, niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-1
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file1<- MS(file,niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
MS_getStats(ms.file1)->sumFile1
ms.file2<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
set.seed(123)
ms.file2<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-4
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file2<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-1
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file2<- MS(file, niter=1000, thetaID="user", params=parDefined,F_ST=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-2
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file2<- MS(file, niter=1000, thetaID="user", params=parDefined,F_ST=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-3
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file2<- MS(file, niter=1000, thetaID="user", params=parDefined,F_ST=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-4
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file2<- MS(file, niter=1000, thetaID="user", params=parDefined,F_ST=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-5
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
ms.file2<- MS(file, niter=1000, thetaID="user", params=parDefined,F_ST=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-5
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
1
ms.file2<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-1
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
parDefined@fixedSegsites<-1
parDefined@fixedsegsites<-1
parDefined
parDefined@fixed.seg.sites<-1
ms.file1<- MS(file,niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
set.seed(123)
ms.file1<- MS(file,niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
set.seed(123)
ms.file2<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
MS_getStats(ms.file1)->sumFile1
MS_getStats(ms.file2)->sumFile2
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-5
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
set.seed(123)
ms.file1<- MS(file,niter=10, thetaID="user", params=parDefined,neutrality=TRUE)
set.seed(123)
ms.file2<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
MS_getStats(ms.file1)->sumFile1
MS_getStats(ms.file2)->sumFile2
sumFile1
View(sumFile2)
library(phyclust)
# trying to think because is still making similar sequences!
set.seed(123)
tree<-ms(nsam=20, nreps=1, opts= "-T -t 1")
We simulated sequences data for 200 individuals using the combined approach ms [@Hudson2002] plus seq-gen [@Rambaut1997] implemented in the *phyclust* package [@Chen2011] of the R program [@RCoreTeam2013]. The ms() function is used to simulate trees in a population that evolves under a Wrigth-Fisher model, and the seqgen() function is used to generate the nucleotide sequences according to those/the tree/s. We simulated sequences for different levels of mutation rate ($\theta$) and saved the  sequences in fasta files representing our "original" populations.
simtree1<-read.tree(text=tree[3])
# changing -s, according to the ms manual, changes theta
set.seed(123)
seqs1<-seqgen(opts= "-mHKY -l600 -q -s0.1", rooted.tree=simtree)
seqs.easy1<-read.seqgen(seqs1)
write.fasta(seqs.easy1$org,"test_s01.fas")
set.seed(123)
seqs2<-seqgen(opts= "-mHKY -l600 -q -s0.2", rooted.tree=simtree)
seqs.easy2<-read.seqgen(seqs2)
write.fasta(seqs.easy2$org,"test_s02.fas")
set.seed(123)
seqs3<-seqgen(opts= "-mHKY -l600 -q -s0.3", rooted.tree=simtree)
seqs.easy3<-read.seqgen(seqs3)
write.fasta(seqs.easy3$org,"test_s03.fas")
simtree<-read.tree(text=tree[3])
set.seed(123)
seqs1<-seqgen(opts= "-mHKY -l600 -q -s0.1", rooted.tree=simtree)
seqs.easy1<-read.seqgen(seqs1)
write.fasta(seqs.easy1$org,"test_s01.fas")
set.seed(123)
seqs2<-seqgen(opts= "-mHKY -l600 -q -s0.2", rooted.tree=simtree)
seqs.easy2<-read.seqgen(seqs2)
write.fasta(seqs.easy2$org,"test_s02.fas")
set.seed(123)
seqs3<-seqgen(opts= "-mHKY -l600 -q -s0.3", rooted.tree=simtree)
seqs.easy3<-read.seqgen(seqs3)
write.fasta(seqs.easy3$org,"test_s03.fas")
ourpath<-getwd()
gitpath<-paste(ourpath,"/SimSeqs",sep="")
# converting FASTA file to GENOME object
simSeq<-readData(gitpath,include.unknown=T)
simSeq@n.sites # gives the number of sites in the alignment
get.sum.data(simSeq) # gives the summary information of the alignment, with the @ you can get all of those summaries, for example:
set.seed(123)
seqs1<-seqgen(opts= "-mHKY -l600 -q -s0.01", rooted.tree=simtree)
seqs.easy1<-read.seqgen(seqs1)
write.fasta(seqs.easy1$org,"test_s001.fas")
set.seed(123)
seqs2<-seqgen(opts= "-mHKY -l600 -q -s0.02", rooted.tree=simtree)
seqs.easy2<-read.seqgen(seqs2)
write.fasta(seqs.easy2$org,"test_s002.fas")
set.seed(123)
seqs3<-seqgen(opts= "-mHKY -l600 -q -s0.03", rooted.tree=simtree)
seqs.easy3<-read.seqgen(seqs3)
write.fasta(seqs.easy3$org,"test_s003.fas")
ourpath<-getwd()
gitpath<-paste(ourpath,"/SimSeqs",sep="")
# converting FASTA file to GENOME object
simSeq<-readData(gitpath,include.unknown=T)
simSeq@n.sites # gives the number of sites in the alignment
get.sum.data(simSeq) # gives the summa
diversity.stats(simSeq,pi=TRUE)->divResults
Piout<-divResults@Pi
Piout
Totsites<-divResults@n.sites
Piout2<-Piout/Totsites #Pi per nucleotide
# Haplotype diversity (H)
divResults@hap.diversity.within
set.seed(123)
seqs1<-seqgen(opts= "-mHKY -l600 -q -s0.001", rooted.tree=simtree)
seqs.easy1<-read.seqgen(seqs1)
write.fasta(seqs.easy1$org,"test_s0001.fas")
set.seed(123)
seqs2<-seqgen(opts= "-mHKY -l600 -q -s0.002", rooted.tree=simtree)
seqs.easy2<-read.seqgen(seqs2)
write.fasta(seqs.easy2$org,"test_s0002.fas")
set.seed(123)
seqs3<-seqgen(opts= "-mHKY -l600 -q -s0.003", rooted.tree=simtree)
seqs.easy3<-read.seqgen(seqs3)
write.fasta(seqs.easy3$org,"test_s0003.fas")
ourpath<-getwd()
gitpath<-paste(ourpath,"/SimSeqs",sep="")
# converting FASTA file to GENOME object
simSeq<-readData(gitpath,include.unknown=T)
simSeq@n.sites # gives the number of sites in the alignment
get.sum.data(simSeq) # gives the summary information of the alignment, with the @ you can get all of those summaries, for example:
Varsites<-simSeq@n.biallelic.sites #number of biallelic sites (SNPs)
Varsites
# aplying the "diversity.stats" methods
diversity.stats(simSeq,pi=TRUE)->divResults
Piout<-divResults@Pi
Piout
# changing -s, according to the ms manual, changes theta
set.seed(123)
seqs1<-seqgen(opts= "-mHKY -l600 -q -s0.004", rooted.tree=simtree)
seqs.easy1<-read.seqgen(seqs1)
write.fasta(seqs.easy1$org,"test_s0004.fas")
set.seed(123)
seqs2<-seqgen(opts= "-mHKY -l600 -q -s0.005", rooted.tree=simtree)
seqs.easy2<-read.seqgen(seqs2)
write.fasta(seqs.easy2$org,"test_s0005.fas")
set.seed(123)
seqs3<-seqgen(opts= "-mHKY -l600 -q -s0.006", rooted.tree=simtree)
seqs.easy3<-read.seqgen(seqs3)
write.fasta(seqs.easy3$org,"test_s0006.fas")
ourpath<-getwd()
gitpath<-paste(ourpath,"/SimSeqs",sep="")
# converting FASTA file to GENOME object
simSeq<-readData(gitpath,include.unknown=T)
simSeq@n.sites # gives the number of sites in the alignment
get.sum.data(simSeq) # gives the summary information of the alignment, with the @ you can get all of those summaries, for example:
Varsites<-simSeq@n.biallelic.sites #number of biallelic sites (SNPs)
Varsites
# aplying the "diversity.stats" methods
diversity.stats(simSeq,pi=TRUE)->divResults
Piout<-divResults@Pi
Piout
Totsites<-divResults@n.sites
Piout2<-Piout/Totsites #Pi per nucleotide
# Haplotype diversity (H)
divResults@hap.diversity.within
set.seed(123)
seqs2<-seqgen(opts= "-mHKY -l600 -q -s0.0035", rooted.tree=simtree)
seqs.easy2<-read.seqgen(seqs2)
write.fasta(seqs.easy2$org,"test_s00035.fas")
ourpath<-getwd()
gitpath<-paste(ourpath,"/SimSeqs",sep="")
# converting FASTA file to GENOME object
simSeq<-readData(gitpath,include.unknown=T)
simSeq@n.sites # gives the number of sites in the alignment
get.sum.data(simSeq) # gives the summary information of the alignment, with the @ you can get all of those summaries, for example:
Varsites<-simSeq@n.biallelic.sites #number of biallelic sites (SNPs)
Varsites
# aplying the "diversity.stats" methods
diversity.stats(simSeq,pi=TRUE)->divResults
Piout<-divResults@Pi
Piout
neuResults<-neutrality.stats(simSeq)
neu<-get.neutrality(neuResults,theta=T,stats=T)
Tajout<-neuResults@Tajima.D
Tajout
set.seed(123)
tree<-ms(nsam=20, nreps=1, opts= "-T -t 1 -G 10")
simtree<-read.tree(text=tree[3])
set.seed(123)
seqs1<-seqgen(opts= "-mHKY -l600 -q -s0.004", rooted.tree=simtree)
seqs.easy1<-read.seqgen(seqs1)
write.fasta(seqs.easy1$org,"test_s0004.fas")
set.seed(123)
seqs2<-seqgen(opts= "-mHKY -l600 -q -s0.0035", rooted.tree=simtree)
seqs.easy2<-read.seqgen(seqs2)
write.fasta(seqs.easy2$org,"test_s00035.fas")
set.seed(123)
seqs3<-seqgen(opts= "-mHKY -l600 -q -s0.003", rooted.tree=simtree)
seqs.easy3<-read.seqgen(seqs3)
write.fasta(seqs.easy3$org,"test_s0003.fas")
ourpath<-getwd()
gitpath<-paste(ourpath,"/SimSeqs",sep="")
# converting FASTA file to GENOME object
simSeq<-readData(gitpath,include.unknown=T)
simSeq@n.sites # gives the number of sites in the alignment
get.sum.data(simSeq) # gives the summary information of the alignment, with the @ you can get all of those summaries, for example:
Varsites<-simSeq@n.biallelic.sites #number of biallelic sites (SNPs)
Varsites
# aplying the "diversity.stats" methods
diversity.stats(simSeq,pi=TRUE)->divResults
Piout<-divResults@Pi
Piout
Totsites<-divResults@n.sites
Piout2<-Piout/Totsites #Pi per nucleotide
# Haplotype diversity (H)
divResults@hap.diversity.within
# aplying the "neutrality.stats"
neuResults<-neutrality.stats(simSeq)
neu<-get.neutrality(neuResults,theta=T,stats=T)
Tajout<-neuResults@Tajima.D
Tajout
help(readMs)
help(readMS)
output<-ms(nsam=20, nreps=1, opts= "-t 1 -G 10")
class(output)
readMS(ms)
output
output<-ms(nsam=20, nreps=1, opts= "-t 1 -G 10 | tail +4 | grep -v // >outfile")
readMS
class(output)
write.table(output,"output")
write.tst(output,"output")
write.txt(output,"output")
help(write.table)
str(output)
file@n.haplotypes
file<-readData("FastaSeqs",include.unknown=T)
get.sum.data(file)
# first we need to apply the neutrality stats
file<-neutrality.stats(file)
# or the F_ST stats if we want haplotype diversity
file<-F_ST.stats(file)
# we call Hudson program, thetaID needs to be defined for any module
ms.file <- MS(file, niter=20,thetaID="Tajima", neutrality=TRUE)
ms.file@n.haplotypes
s
MS_getStats(ms.file) #stats change depending what module we choose
class(MS_getStats(ms.file))
file<-readData("FastaSeqs",include.unknown=T)
file@n.haplotypes
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-5
# ----growth values-----if (+) means that the population was smaller in the past, if (-) the population was larger in the past
# a growth value of 10 is the ones that minimize Tajima's D
parDefined@growth<-10
set.seed(123)
ms.file1<- MS(file,niter=5, thetaID="user", params=parDefined,neutrality=TRUE)
set.seed(123)
file<-neutrality.stats(file)
ms.file1<- MS(file,niter=5, thetaID="user", params=parDefined,neutrality=TRUE)
MS_getStats(ms.file1)->sumFile1
sumFile1
a=NULL
for (i in 1:5){
(5/(5+i-1))->a[i+0]
}
<<<<<<< HEAD
a
sum(a)
theta= 1.494709
a=NULL
for (i in 1:5){
(theta/(theta+i-1))->a[i+0]
}
a
sum(a)
theta= 1.798812
a=NULL
for (i in 1:5){
(theta/(theta+i-1))->a[i+0]
}
sum(a)
ms.file2<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
file<-readData("FastaSeqs",include.unknown=T)
get.sum.data(file)
# first we need to apply the neutrality stats
file<-neutrality.stats(file)
# or the F_ST stats if we want haplotype diversity
file<-F_ST.stats(file)
ms.file2<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
MS_getStats(ms.file2)->sumFile2
View(sumFile2)
parDefined<-new("test.params")
# to add values #http://www.inside-r.org/node/132342
# ---theta---- it has to be a vector of lenght n.regions
parDefined@theta<-5
set.seed(123)
ms.file1<- MS(file,niter=5, thetaID="user", params=parDefined,neutrality=TRUE)
MS_getStats(ms.file1)->sumFile1
sumFile1
ms.file1<- MS(file,niter=30, thetaID="user", params=parDefined,neutrality=TRUE)
MS_getStats(ms.file1)->sumFile1
sumFile1
mean(sumFile1[,"theta_Tajima"])
mean(sumFile1[,"theta_Watterson"])
variance(sumFile1[,"theta_Tajima"])
var(sumFile1[,"theta_Tajima"])
var(sumFile1[,"theta_Watterson"])
sumFile1
mean(sumFile1[,"theta_Tajima"])
var(sumFile1[,"theta_Tajima"])
mean(sumFile1[,"theta_Watterson"])
var(sumFile1[,"theta_Watterson"])
ms.file2<- MS(file, niter=10, thetaID="user", params=parDefined,F_ST=TRUE)
MS_getStats(ms.file1)->sumFile1
MS_getStats(ms.file2)->sumFile2
sumFile2
=======
class(array)
View(array)
probs<-t(matrix(array,nrow=3))
probs
View(probs)
plot(probs[,1],probs[,3],col='red')
plot(probs[,1],probs[,2],col='red')
dataobject(probs)
objectcode(probs)
=======
setwd("~/Desktop/QuBar")
install.packages("entropart")
>>>>>>> Stashed changes
>>>>>>> origin/master
